# ==============================
# DATABASES
# ==============================

# Datebase connection properties (Required!)
spring.datasource.url=jdbc:mysql://localhost:3306/airline?useSSL=false&useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username=safelyuser
spring.datasource.password=pass

# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.tomcat.max-wait=10000

# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=50

# Validate the connection before borrowing it from the pool.
spring.datasource.tomcat.test-on-borrow=true

# ==============================
# JPA && HIBERNATE
# ==============================

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.connection.characterEncoding=utf-8
spring.jpa.properties.hibernate.connection.CharSet=utf-8
spring.jpa.properties.hibernate.connection.useUnicode=true

# Log sql querry
spring.jpa.show-sql=true

# NOTE:If this was actually a production database, you not tell Hibernate to use the create-drop option.
# This tells Hibernate to recreate the database on startup. Definitely not the behavior we want.
# You can set this property to the following values: none, validate, update, create-drop.
# If this was actually a production database, you probably would want to use validate.
spring.jpa.hibernate.ddl-auto=update

# Allow to update template without reloading application (ctrl + f9)
spring.thymeleaf.cache = true

# Disabling the Whitelabel Error Page
server.error.whitelabel.enabled=false
# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration\
# for Spring Boot 2.0
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
